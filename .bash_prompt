#!/bin/bash

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi


# if [ "$color_prompt" = yes ]; then
    # PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
# else
    # PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
# fi
unset color_prompt force_color_prompt

# Git Branch
source $DOTFILESDIR/git-prompt.sh
# PS1='\u@\h \W$(__git_ps1 " (%s)")\n$ '

COLOR_RED="\033[0;31m"
COLOR_YELLOW="\033[0;33m"
COLOR_GREEN="\033[0;32m"
COLOR_OCHRE="\033[38;5;95m"
COLOR_BLUE="\033[0;34m"
COLOR_WHITE="\033[0;37m"
COLOR_RESET="\033[0m"

function git_color {
 local git_status="$(git status 2> /dev/null)"

 if [[ ! $git_status =~ "working directory clean" ]]; then
   echo -e $COLOR_RED
 elif [[ $git_status =~ "Your branch is ahead of" ]]; then
   echo -e $COLOR_YELLOW
 elif [[ $git_status =~ "nothing to commit" ]]; then
   echo -e $COLOR_GREEN
 else
   echo -e $COLOR_OCHRE
 fi
}

function git_branch {
 local git_status="$(git status 2> /dev/null)"
 local on_branch="On branch ([^${IFS}]*)"
 local on_commit="HEAD detached at ([^${IFS}]*)"

 if [[ $git_status =~ $on_branch ]]; then
   local branch=${BASH_REMATCH[1]}
   echo "($branch)"
 elif [[ $git_status =~ $on_commit ]]; then
   local commit=${BASH_REMATCH[1]}
   echo "($commit)"
 fi
}

function prompt_for_user {
  if [[ "$(id -u)" == "0" ]]; then
    local prompt="#"
  else
    local prompt="$"
  fi
  echo "$prompt"
}

# Bash prompt
# export prompt_if_sudo='`[ $(id -u) == "0" ] && echo "#" || echo ">"` '
export PS0="[\t]\n"
export PS1="\[\e[01;32m\]\u\[\e[0m\]\[\e[01;37m\]@\[\e[0m\]\[\e[01;31m\]\h\[\e[0m\]\[\e[01;37m\]:\[\e[0m\]\[\e[00;37m\] \[\e[0m\]\[\e[00;33m\]\w\[\e[0m\]\[\e[0m\]\[\e[00;37m\] \[\e[0m\]\[\$(git_color)\]\$(git_branch)\[\033[0m\]\n[\t]\$ "
export CLICOLOR=1
